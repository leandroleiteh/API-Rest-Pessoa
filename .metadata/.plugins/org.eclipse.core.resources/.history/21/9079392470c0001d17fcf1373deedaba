package com.attornatus.teste.controller;

import java.util.List;
//import java.util.List;
import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.attornatus.teste.dtos.PessoaDto;
import com.attornatus.teste.model.PessoaModel;
import com.attornatus.teste.repository.PessoaRepository;
import com.attornatus.teste.service.PessoaService;

import ch.qos.logback.core.joran.util.beans.BeanUtil;
import jakarta.validation.Valid;

@RestController
@RequestMapping("/pessoas")
public class PessoaController {

	
	
	final PessoaService pessoaService;

	public PessoaController(PessoaService pessoaService) {
		this.pessoaService = pessoaService;
	}

//	@GetMapping
//	public List<PessoaModel> listar() {S
//		return pessoaRepository.findAll();
//	}
//	
//	@PostMapping
//	@ResponseStatus(HttpStatus.CREATED)
//	public PessoaModel criar(@RequestBody PessoaModel pessoa) {
//		return pessoaRepository.save(pessoa);
//	}
	
	@PostMapping
	public ResponseEntity<Object> savePessoa(@RequestBody @Valid PessoaDto pessoaDto){
		if(pessoaService.existsBynome(pessoaDto.getNome())) {
			return ResponseEntity.status(HttpStatus.CONFLICT).body("Conflict: Nome est√° sendo usado!");
		}
		var pessoaModel = new PessoaModel();
		BeanUtils.copyProperties(pessoaDto, pessoaModel);
		return ResponseEntity.status(HttpStatus.CREATED).body(pessoaService.save(pessoaModel));
	}

	@GetMapping
	public ResponseEntity<List<PessoaModel>> getAllPessoa(){
		return ResponseEntity.status(HttpStatus.OK).body(pessoaService.findAll());
	}
}	
	
	